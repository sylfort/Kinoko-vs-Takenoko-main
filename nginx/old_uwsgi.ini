[uwsgi]
# Basic application settings
wsgi-file = wsgi.py
callable = app
chdir = /home/ec2-user/my-image-recognition-app

# Socket for Nginx communication
socket = /tmp/uwsgi-img-recog.sock
chmod-socket = 660
uid = ec2-user
gid = nginx

# Minimal process settings
master = true
processes = 1
threads = 1
enable-threads = true

# Proper shutdown handling
die-on-term = true
vacuum = true
harakiri = 30

# Basic timeout settings
reload-mercy = 10
worker-reload-mercy = 10

# Logging
logto = /home/ec2-user/uwsgi-img-recog.log
log-level = INFO

# [uwsgi]
# # Application settings
# wsgi-file = wsgi.py
# callable = app
# chdir = /home/ec2-user/my-image-recognition-app

# socket = /tmp/uwsgi-img-recog.sock
# #chmod-socket = 666  ; Allow Nginx to connect (less secure, use group membership instead if possible)
# uid = ec2-user     ; User to run uWSGI as
# gid = nginx        ; Group uWSGI will run as

# # Process settings
# master = true
# processes = 1
# threads = 1
# enable-threads = true

# # Socket settings (systemd will pass socket file)
# vacuum = true
# die-on-term = true

# # Memory optimizations
# #cheaper = 1
# #cheaper-initial = 1
# #cheaper-step = 1
# #cheaper-algo = spare
# memory-report = true
# harakiri = 30
# max-requests = 1000
# max-worker-lifetime = 3600
# reload-on-rss = 128
# evil-reload-on-rss = 256
# worker-reload-mercy = 60

# # Python settings
# py-call-osafterfork = true
# single-interpreter = true
# disable-logging = false
# log-4xx = true
# log-5xx = true

# # Low memory optimizations
# post-buffering = 8192
# buffer-size = 16384
# thunder-lock = true
# lazy-apps = true

# # Avoid file system polling
# touch-reload = %p
# fs-brutal-reload = 30

# # Logging
# logto = /home/ec2-user/uwsgi-img-recog.log
# log-level = DEBUG